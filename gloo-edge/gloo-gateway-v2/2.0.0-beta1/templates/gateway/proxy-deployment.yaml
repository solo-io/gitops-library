{{- if .Values.gateway.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gloo-gateway.gateway.fullname" . }}
  labels:
    {{- include "gloo-gateway.gateway.const_labels" . | nindent 4 }}
    {{- include "gloo-gateway.gateway.labels" . | nindent 4 }}
spec:
  {{- if not .Values.gateway.autoscaling.enabled }}
  replicas: {{ .Values.gateway.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gloo-gateway.gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.gateway.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gloo-gateway.gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.gateway.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gloo-gateway.gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.gateway.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.gateway.securityContext | nindent 12 }}
        args:
        - "-c"
        - "/etc/envoy/envoy.yaml"
        - "--disable-hot-restart"
        - "--service-node"
        - $(POD_NAME).$(POD_NAMESPACE)
        {{- if .Values.develop }}
        - "--log-level"
        - "debug"
        {{- end }}
        image: "{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
        volumeMounts:
        - mountPath: /etc/envoy
          name: envoy-config
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ENVOY_UID
          value: "0"
        ports:
        {{- range $p := .Values.gateway.ports }}
        - name: {{ $p.name }}
          protocol: {{ $p.protocol }}
          containerPort: {{ $p.targetPort }}
        {{- end }}
        - name: readiness
          protocol: TCP
          containerPort: {{ .Values.gateway.readinessPort }}
        readinessProbe:
          httpGet:
            path: /ready
            port: readiness
        resources:
          {{- toYaml .Values.gateway.resources | nindent 12 }}
      {{- with .Values.gateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - configMap:
          name: {{ include "gloo-gateway.gateway.fullname" . }}
        name: envoy-config
{{- if .Values.gateway.serviceAccount.create }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "gloo-gateway.gateway.fullname" . }}
  labels:
    {{- include "gloo-gateway.gateway.const_labels" . | nindent 4 }}
    {{- include "gloo-gateway.gateway.labels" . | nindent 4 }}
  {{- with .Values.gateway.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
automountServiceAccountToken: false
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "gloo-gateway.gateway.fullname" . }}
  labels:
    {{- include "gloo-gateway.gateway.const_labels" . | nindent 4 }}
    {{- include "gloo-gateway.gateway.labels" . | nindent 4 }}
spec:
  type: {{ .Values.gateway.service.type }}
  ports:
  {{- range $p := .Values.gateway.ports }}
  - name: {{ $p.name }}
    protocol: {{ $p.protocol }}
    targetPort: {{ $p.targetPort }}
    port: {{ $p.port }}
  {{- end }}
  selector:
    {{- include "gloo-gateway.gateway.selectorLabels" . | nindent 4 }}
---
{{- $xdsDefault := printf "%s.%s" (include "gloo-gateway.controlPlane.fullname" . ) .Release.Namespace }}
{{- $xdsHost := default $xdsDefault .Values.gateway.xds.host }}
{{- $xdsPort := default .Values.controlPlane.service.port .Values.gateway.xds.port }}
{{- $xdsClusterName := printf "%s:%v" $xdsHost $xdsPort }}

# config_map
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "gloo-gateway.gateway.fullname" . }}
  labels:
    {{- include "gloo-gateway.gateway.const_labels" . | nindent 4 }}
    {{- include "gloo-gateway.gateway.labels" . | nindent 4 }}
data:
  envoy.yaml: |
    admin:
      address:
        socket_address: { address: 127.0.0.1, port_value: 19000 }
  
    node:
      cluster: {{ include "gloo-gateway.gateway.fullname" . }}.{{ .Release.Namespace }}
      metadata:
        gateway:
          name: {{ .Values.gateway.gatewayName | default (include "gloo-gateway.gateway.fullname" .) }}
          namespace: {{ .Release.Namespace }}
    static_resources:
      listeners:
      - name: read_config_listener
        address:
          socket_address: { address: 0.0.0.0, port_value: {{ .Values.gateway.readinessPort }} }
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              codec_type: AUTO
              route_config:
                name: main_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      path: "/ready"
                      headers:
                      - name: ":method"
                        string_match:
                          exact: GET
                    route:
                      cluster: admin_port_cluster
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

      clusters:
        - name: {{ $xdsClusterName }}
          alt_stat_name: xds_cluster
          connect_timeout: 5.000s
          load_assignment:
            cluster_name: {{ $xdsClusterName }}
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: {{ $xdsHost }}
                      port_value: {{ $xdsPort }}
          typed_extension_protocol_options:
            envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
              "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
              explicit_http_config:
                http2_protocol_options: {}
          upstream_connection_options:
            tcp_keepalive:
              keepalive_time: 10
          type: STRICT_DNS
          respect_dns_ttl: true
        - name: admin_port_cluster
          connect_timeout: 5.000s
          type: STATIC
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: admin_port_cluster
            endpoints:
            - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 19000

    dynamic_resources:
      ads_config:
        transport_api_version: V3
        api_type: GRPC
        rate_limit_settings: {}
        grpc_services:
        - envoy_grpc:
            cluster_name: {{ $xdsClusterName }}
      cds_config:
        resource_api_version: V3
        ads: {}
      lds_config:
        resource_api_version: V3
        ads: {}
{{- end }}
