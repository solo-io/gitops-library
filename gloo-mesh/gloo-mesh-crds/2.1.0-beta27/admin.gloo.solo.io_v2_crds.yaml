# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 97495d6f82a8ab2
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: workspaces.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Workspace
    listKind: WorkspaceList
    plural: workspaces
    shortNames:
    - ws
    singular: workspace
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `Workspace` describes a logical grouping of Kubernetes namespaces within the clusters that are part of
              a virtual mesh. Workspace can be treated as a boundary for configuration and service discovery.
              The specification describes how to select namespaces or/and clusters for a given workspace.

              The workspace-wide settings such as `importFrom`, `exportTo` are configured in the `WorkspaceSettings`
              object. Refer to the `WorkspaceSettings` documentation for details.

              The following example creates the `web` workspace that selects all workload clusters and all namespaces
              within those clusters to be part of the workspace.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
              spec:
                workloadClusters:
                  - name: "*"
                    namespaces:
                    - name: "*"
              ```

              The following configuration creates the `web` workspace that selects the `web` namespace from all workload
              clusters that have the label of `region: us-east` to be part of the workspace. Refer to the `KubernetesCluster`
              documentation for examples on how to label your KubernetesCluster resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
              spec:
                workloadClusters:
                  - selector:
                      region: us-east
                    namespaces:
                      - name: web
              ```

              The following example creates the `policy` namespace that does NOT have any workload clusters.
              This workspace also has the `gloo.solo.io/global` label which other workspaces
              can use to import this workspace by label in their `WorkspaceSettings` resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: policy
                namespace: gloo-mesh
                labels:
                  gloo.solo.io/global: 'true'
              ```

              The example below creates the `backend` workspace that select any namespace that starts with `ns1` in `cluster1`
              and any namespace that starts with `ns2` in `cluster2`. It has the `gloo.solo.io/exportToGateway` label,
              which other workspaces can use to import this workspace by label in their `WorkspaceSettings` resource.
              Refer to the `KubernetesCluster` documentation for examples on how to name your KubernetesCluster resource.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: backend
                namespace: gloo-mesh
                labels:
                  gloo.solo.io/exportToGateway: tier1
                  team: backend
              spec:
                workloadClusters:
                  - name: cluster1
                    namespaces:
                      - name: ns1*
                  - name: cluster2
                    namespaces:
                      - name: ns2*
              ```
            properties:
              workloadClusters:
                description: |-
                  Optional: Select workload clusters and namespaces for the workload clusters that are part of the workspace.
                  When this is not specified, the workspace contains no workload clusters.
                items:
                  properties:
                    configEnabled:
                      description: 'Optional: Enable configuration from this workload
                        cluster. (default: true unless explicitly enabled for any
                        selected clusters or namespaces)'
                      type: boolean
                    name:
                      description: |-
                        Optional: Name of the cluster to select.
                        Use * to match name patterns in multiple clusters name.
                      type: string
                    namespaces:
                      description: Select the namespaces in the cluster(s) to include
                        in the workspace. If you do not select any namespaces, the
                        workspace is empty and results in an error.
                      items:
                        properties:
                          configEnabled:
                            description: 'Optional: Enable configuration from this
                              namespace. (default: true unless explicitly enabled
                              for any selected clusters or namespaces)'
                            type: boolean
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select groups of namespaces via labels.
                              Leaving this field empty will NOT select all namespaces, but rather be ignored.
                              Note: When this field is used in conjunction with "name", both conditions are ANDed together.
                            type: object
                          name:
                            description: |-
                              Name of the namespace to select.
                              Can use * to match name patterns in multiple namespaces.
                              Note: When this field is used in conjunction with "labels", both conditions are ANDed together.
                            type: string
                        type: object
                      type: array
                    selector:
                      additionalProperties:
                        type: string
                      description: |-
                        Optional: Include workload clusters in the workspace by using a selector.
                        The selector matches the selector values in the KubernetesCluster resource on the management cluster.
                        Selector is a map of {key,value} pairs. A single {key,value} in the selector
                        map is equivalent to an element of labelRequirements, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                type: array
            type: object
          status:
            description: reflects the status of the workspace
            properties:
              clusters:
                description: Clusters that this workspace selects. These cluster objects
                  contain the namespaces that the workspace owns within them.
                items:
                  properties:
                    name:
                      description: Name of a cluster that this workspace selects
                      type: string
                    namespaces:
                      description: Namespaces inside the cluster that this workspace
                        owns.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              destinationCounts:
                additionalProperties:
                  format: int32
                  type: integer
                description: destination resource counts in this workspace by type
                  (k8s service, virtual destination, external service)
                type: object
              generic:
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                  updatedAt:
                    description: The last time the status was updated.
                    format: date-time
                    type: string
                type: object
              importedWorkspaces:
                description: list of workspaces imported into this workspace
                items:
                  type: string
                type: array
              policyCounts:
                additionalProperties:
                  format: int32
                  type: integer
                description: policy resource counts in this workspace by type (security,
                  trafficcontrol, resilience, observability)
                type: object
              resources:
                additionalProperties:
                  properties:
                    exported:
                      properties:
                        objectReferences:
                          items:
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          type: array
                      type: object
                    imported:
                      properties:
                        objectReferences:
                          items:
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          type: array
                      type: object
                    private:
                      properties:
                        objectReferences:
                          items:
                            properties:
                              cluster:
                                description: the cluster of the object. if the field
                                  is omitted, Gloo Mesh will use the same cluster
                                  as the parent object containing this reference.
                                type: string
                              name:
                                description: the name of the object
                                type: string
                              namespace:
                                description: the namespace of the object. if the field
                                  is omitted, Gloo Mesh will use the same namespace
                                  as the parent object containing this reference.
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                description: gvk -> private/export/import reference
                type: object
              workspaceSettings:
                description: The workspacesettings object configuring this workspace.
                properties:
                  cluster:
                    description: the cluster of the object. if the field is omitted,
                      Gloo Mesh will use the same cluster as the parent object containing
                      this reference.
                    type: string
                  name:
                    description: the name of the object
                    type: string
                  namespace:
                    description: the namespace of the object. if the field is omitted,
                      Gloo Mesh will use the same namespace as the parent object containing
                      this reference.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: a559b66280127db6
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: workspacesettings.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WorkspaceSettings
    listKind: WorkspaceSettingsList
    plural: workspacesettings
    shortNames:
    - wss
    singular: workspacesettings
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `WorkspaceSettings` define a set of workspace-wide parameters such as `importFrom` and `exportTo` for the workspace.
              These settings are commonly defined by the workspace admin. There are 3 key configurations related to `WorkspaceSettings`:

              - importFrom: To import resources from another workspace to your workspace, configure the
              `importFrom` field in the `WorkspaceSettings` resource for your workspace.

              - exportTo: To export resources in your workspace to other workspaces, configure the `exportTo`
              field in the `WorkspaceSettings` resource for your workspace.

              - options: Configure service isolation, federation and other options for the workspace.

              You can specify your workspace's `importFrom` or `exportTo` or other workspace configuration options in your
              `WorkspaceSettings` resource for your workspace. Only one `WorkspaceSettings` resource can be defined for
              each workspace. The resource can be deployed to any of your workspace's namespaces in your workload cluster(s).

              Export:
              Only the resources below can be exported to other workspaces:
              - Kubernetes Service
              - VirtualDestination
              - ExternalService
              - RouteTable

              You can use the `exportTo` field in the `WorkspaceSettings` resource for the workspace to configure what resources
              are exported to which other workspaces. For example, the `web` application developer can export the RouteTable resource
              from the `web` workspace to an admin-owned gateway workspace.

              The following workspace example defines the `backend` workspace. The workspace settings example
              exports the `backend` workspace to any workspaces that matches the label `team: web`.
              In addition, all exported resources from the `backend` workspace are made available
              for any workspace that has the label `team: web` to import.

              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: backend
                namespace: gloo-mesh
                labels:
                  team: backend
              spec:
                workloadClusters:
                  - namespaces:
                    - name: backend*
              ---
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: backend-namespace
              spec:
                exportTo:
                  - workspaces:
                    - selector:
                        team: web
              ```

              Import:
              To import exported resources from other workspaces, configure the `importFrom` field in
              the `WorkspaceSettings` resource for your workspace.

              For example, by importing the `web` workspace, the admin-owned gateway workspace can delegate routing for a subset
              of the gateway traffic to a RouteTable resource in the `web` workspace.

              The following workspace defines the `web` workspace. The workspace settings example imports
              the exported resources from the `backend` workspace into the `web` workspace. The exported resources from the
              `backend` workspace is available to the `web` workspace for imports because the `web` workspace
              has the `team:web` label.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Workspace
              metadata:
                name: web
                namespace: gloo-mesh
                labels:
                  team: web
              spec:
                workloadClusters:
                  - namespaces:
                    - name: web*
              ---
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: web-namespace
              spec:
                importFrom:
                  - workspaces:
                    - name: backend
              ```

              The following example imports any workspaces that are available for the `web` workspace to import and
              has the `team: backend` label into the `web` workspace. After this is deployed
              in the `web-namepsace` namespace of a given workload cluster that are part of the workspace,
              all exported resources from the `backend` workspaces which has the label `team: backend`
              are imported into the `web` workspace and available for use by anything in the `web` workspace.
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: WorkspaceSettings
              metadata:
                name: default
                namespace: web-namepsace
              spec:
                importFrom:
                  - workspaces:
                    - selector:
                        team: backend
              ```

              WorkspaceSettings defined in the admin namespace for Gloo Mesh will override settings defined in individual workspaces. Must have the name "global" to be picked up by Gloo Mesh.
            properties:
              exportTo:
                description: |-
                  A workspace can specify resources to export for use by other workspaces.
                  Currently the following types of objects can be exported across workspaces:
                  - kubernetes services
                  - virtual destinations
                  - external destinations
                  - route tables
                  You can select workspace using labels, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - selector:
                              team: backend
                  ```
                  Or select workspace name using exact name match, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - name: backend
                  ```
                  Or exportTo all other workspaces, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - name: *
                  ```
                  Or select workspace using labels and name using simple regex, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                          - selector:
                              team: backend
                              name: backend*
                  ```
                  Or select workspace name using labels or select name using simple regex, for example:
                  ```yaml
                      exportTo:
                        - workspaces:
                           - selector:
                               team: backend
                           - name: backend
                  ```
                items:
                  properties:
                    resources:
                      description: the resources (and types of those resources) which
                        will be imported from or exported to the selected workspaces.
                      items:
                        properties:
                          cluster:
                            description: |-
                              Only select objects in the exactly matching cluster. If the field is omitted, Gloo Mesh will select
                              matching objects across all clusters available in the workspace.
                            type: string
                          kind:
                            description: |-
                              the type of the resource to import or export.
                              The type must be a valid importable/exportable Kubernetes or Gloo Mesh resource type.
                              Supported types:
                              - `RouteTable`
                              - `Service`
                              - `VirtualDestination`
                              - `ExternalService`
                              - `All` (all types)
                            enum:
                            - ALL
                            - ROUTE_TABLE
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: labels matching those of the object
                            type: object
                          name:
                            description: |-
                              Only select objects exactly matching the name. If the field is omitted, Gloo Mesh will select
                              matching objects with any name available in the workspace.
                            type: string
                          namespace:
                            description: |-
                              Only select objects exactly matching the namespace. If the field is omitted, Gloo Mesh will select
                              matching objects across all namespaces available in the workspace.
                            type: string
                        type: object
                      type: array
                    workspaces:
                      description: the workspaces with the resources to export to
                        or import.
                      items:
                        properties:
                          name:
                            description: |-
                              Optional: Name of the workspace to select.
                              Use * to match name patterns in multiple workspace names.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select workspaces based on their labels
                              The example below select workspaces based on the label `team: backend`:
                              ```yaml
                               - selector:
                                   team: backend
                              ```
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              importFrom:
                description: |-
                  Select the workspaces whose objects will be imported into this workspace.
                  Objects must both be exported by the workspace that is being imported and imported into this workspace in order to be shared across workspaces.
                  Imported objects allow the creation of routes and outbound-communication from one workspace to another.
                  Currently the following types of objects can be imported across workspaces:
                  - kubernetes services
                  - virtual destinations
                  - external destinations
                  - route tables
                  You can select workspace using labels, for example:
                  ```yaml
                      importFrom:
                        - workspaces:
                          - selector:
                              team: backend
                          services:
                          - {} # select all services
                  ```
                  Or select workspace name using exact name match, for example:
                  ```yaml
                      importFrom:
                        # import all importable objects from the workspace named "backend"
                        - workspaces:
                          - name: backend
                  ```
                  Or select workspace using labels and name using simple regex, for example:
                  ```yaml
                      importFrom:
                        - workspaces:
                          - selector:
                              team: backend
                            name: backend*
                  ```
                  Or select workspace name using labels or select name using simple regex, for example:
                  ```yaml
                      importFrom:
                        - workspaces:
                          - selector:
                              team: backend
                          - name: backend
                  ```
                items:
                  properties:
                    resources:
                      description: the resources (and types of those resources) which
                        will be imported from or exported to the selected workspaces.
                      items:
                        properties:
                          cluster:
                            description: |-
                              Only select objects in the exactly matching cluster. If the field is omitted, Gloo Mesh will select
                              matching objects across all clusters available in the workspace.
                            type: string
                          kind:
                            description: |-
                              the type of the resource to import or export.
                              The type must be a valid importable/exportable Kubernetes or Gloo Mesh resource type.
                              Supported types:
                              - `RouteTable`
                              - `Service`
                              - `VirtualDestination`
                              - `ExternalService`
                              - `All` (all types)
                            enum:
                            - ALL
                            - ROUTE_TABLE
                            - SERVICE
                            - VIRTUAL_DESTINATION
                            - EXTERNAL_SERVICE
                            type: string
                          labels:
                            additionalProperties:
                              type: string
                            description: labels matching those of the object
                            type: object
                          name:
                            description: |-
                              Only select objects exactly matching the name. If the field is omitted, Gloo Mesh will select
                              matching objects with any name available in the workspace.
                            type: string
                          namespace:
                            description: |-
                              Only select objects exactly matching the namespace. If the field is omitted, Gloo Mesh will select
                              matching objects across all namespaces available in the workspace.
                            type: string
                        type: object
                      type: array
                    workspaces:
                      description: the workspaces with the resources to export to
                        or import.
                      items:
                        properties:
                          name:
                            description: |-
                              Optional: Name of the workspace to select.
                              Use * to match name patterns in multiple workspace names.
                            type: string
                          selector:
                            additionalProperties:
                              type: string
                            description: |-
                              Optional: Select workspaces based on their labels
                              The example below select workspaces based on the label `team: backend`:
                              ```yaml
                               - selector:
                                   team: backend
                              ```
                            type: object
                        type: object
                      type: array
                  type: object
                type: array
              options:
                description: Options for configuring the workspace as a whole.
                properties:
                  eastWestGateways:
                    description: |-
                      Selects the ingress gateways in a workspace. If no gateways are selected, defaults to attempting to use
                      istio-eastwestgateway.istio-system as the Istio ingress gateway for "east-west" traffic, which is traffic
                      routed across clusters for federation and virtual destinations.
                    items:
                      properties:
                        hostInfoOverrides:
                          description: |-
                            Host information for an east-west gateway. Can be used to specify a set of routable
                            destinations that proxy traffic back to the east-west gateway selected
                            by the selector. Useful when a load balancer external to the mesh is being
                            used. When using this feature, be careful to ensure that the selectors are
                            granular enough to ensure that the correct HostInfo is mapped to the proper gateway.
                          items:
                            properties:
                              addr:
                                description: |-
                                  Address to be used to direct traffic to instead of the default gateway discovered address.
                                  Can be an IP address or hostname.
                                type: string
                              port:
                                description: Port to be used to direct traffic to
                                  instead of the default gateway discovered port.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                        port:
                          description: |-
                            The port on the Destination which receives traffic.
                            Not required if the Destination only exposes a single port.
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        selector:
                          description: Select east-west gateway
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                      type: object
                    type: array
                  federation:
                    description: |-
                      Federation is a feature which allows Kubernetes Services to directly communicate with each other across clusters
                      using generated hostnames. When enabled, federation will generate a hostname for each Service selected, which is
                      reachable by all network clients in the workspace.
                      Federation allows routes to be created in RouteTables which forward traffic across clusters. These routes will otherwise
                      be treated by Gloo Mesh as errors.
                    properties:
                      enabled:
                        description: enables the federation feature for selected Kubernetes
                          services in the workspace.
                        type: boolean
                      hostSuffix:
                        description: 'Optional: The suffix used for generated hostnames.
                          Hostnames will be generated for each selected service in
                          the format {{ service name }}.{{ service namespace }}.{{
                          service cluster }}.{{ host suffix }}.'
                        type: string
                      ports:
                        description: if provided, expose only selected ports to cross-cluster
                          traffic.
                        items:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - number
                              - required:
                                - name
                          - required:
                            - number
                          - required:
                            - name
                          properties:
                            name:
                              description: the name of the port on the destination
                                objects being targeted.
                              type: string
                            number:
                              description: the number of the port on the destination
                                objects being targeted.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        type: array
                      serviceSelector:
                        description: |-
                          Selector for the K8s services that will be exposed to cross-cluster traffic within the Workspace.
                          Federated hostnames will be generated for selected imported services.
                        items:
                          properties:
                            cluster:
                              description: |-
                                Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                                matching objects across all clusters available in the parent object's workspace.
                              type: string
                            labels:
                              additionalProperties:
                                type: string
                              description: labels matching those of the object
                              type: object
                            name:
                              description: |-
                                Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                                matching objects with any name available in the parent object's workspace.
                              type: string
                            namespace:
                              description: |-
                                Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                                matching objects across all namespaces available in the parent object's workspace.
                              type: string
                            workspace:
                              description: |-
                                Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                                matching objects across all workspaces available in the parent object's workspace.
                              type: string
                          type: object
                        type: array
                    type: object
                  serviceIsolation:
                    description: |-
                      If Enabled, serviceIsolation will automatically block communication from non-importing workspaces into this one, enforced using mTLS.
                      Setting this to true is equivalent to manually creating an AccessPolicy with the following spec:
                      spec:
                        applyToDestinations: nil
                        config:
                          authn:
                            tlsMode: STRICT
                          authz:
                            authz:
                              allowedClients:
                              - serviceAccountSelector:
                                  workspace: this-workspace
                              - serviceAccountSelector:
                                  workspace: importing-workspace-1 # for each workspace importing this one

                      Applying AccessPolicies to destinations in this workspace will override the default service isolation behavior.
                    properties:
                      enabled:
                        description: |-
                          Automatically enables strict mTLS and blocks any access from non-importing workspaces into any destination in the current workspaces.
                          Default value is disabled.
                        type: boolean
                      trimProxyConfig:
                        description: |-
                          When enabled, proxy config will be trimmed to eliminate unnecessary config updates.
                          In Istio this will be implemented using the Sidecar resource.
                        nullable: true
                        type: boolean
                    type: object
                  virtualDestClientMode:
                    description: |-
                      Optional: Virtual destination client mode determines how VirtualDestinations will be translated.
                      If nil, the default value of auto mode will be used. Any configuration here can be overriden
                      on any individual virtual destination. The settings defined here apply to both user-provided
                      VirtualDestinations and those generated internally when federation is enabled.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - auto
                        - required:
                          - sniRouting
                        - required:
                          - tlsTermination
                    - required:
                      - auto
                    - required:
                      - sniRouting
                    - required:
                      - tlsTermination
                    properties:
                      auto:
                        description: |-
                          The default mode is to use sni routing via tls passthrough at the East/West Gateway to route to services across clusters.
                          In the future, this may change to become smarter (e.g., detect if any pods backing the virtual destination don't have sidecars,
                          if so, then use tls termination so all pods are routeable).
                        maxProperties: 0
                        type: object
                      sniRouting:
                        description: Sni routing mode uses tls passthrough to route
                          traffic to the proper pod (with sidecar) from the East/West
                          Gateway.
                        maxProperties: 0
                        type: object
                      tlsTermination:
                        description: |-
                          Tls termination mode uses tls termination at the East/West Gateway to route traffic to the correct pod.
                          This mode is ideal for Gloo Mesh Gateway, i.e. some backing pods don't have sidecars.
                          Since TLS is terminated at the East/West Gateway, the backing service (if it has a sidecar) will not be able to
                          verify the istio mTLS identity of the originating client; rather it will verify the istio mTLS cert of the East/West Gateway.
                        maxProperties: 0
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the workspace settings
            properties:
              federatedServices:
                description: |-
                  Services federated to this workspace because of this workspacesettings configuration.
                  The GVK of federated_services is core/v1/Service.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              generic:
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                  updatedAt:
                    description: The last time the status was updated.
                    format: date-time
                    type: string
                type: object
              selectedEastWestGateways:
                description: |-
                  Selected east-west gateways determined by the EastWestGatewaySelector
                  The GVK of selected_east_west_gateways is DiscoveredGateway.
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspace:
                description: The workspace that this workspacesettings object is configuring.
                properties:
                  cluster:
                    description: the cluster of the object. if the field is omitted,
                      Gloo Mesh will use the same cluster as the parent object containing
                      this reference.
                    type: string
                  name:
                    description: the name of the object
                    type: string
                  namespace:
                    description: the namespace of the object. if the field is omitted,
                      Gloo Mesh will use the same namespace as the parent object containing
                      this reference.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 81fd2e4210e04a7c
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: kubernetesclusters.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: KubernetesCluster
    listKind: KubernetesClusterList
    plural: kubernetesclusters
    shortNames:
    - kc
    singular: kubernetescluster
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `KubernetesCluster` defines a Kubernetes cluster that has been registered with Gloo Mesh for management.
              A KubernetesCluster must be created in order to connect the Gloo Mesh Agent
              with the Gloo Mesh Server.
              KubernetesCluster must be deployed to the management cluster in the `gloo-mesh` namespace.
              The name of the KubernetesCluster has to be unique among all managed workload clusters for a
              given Gloo Mesh management plane.
              The name or/and labels of a KubernetesCluster resource can be used in a Workspace resource to determine
              the workload clusters for a given workspace.

              The following example show a simple KubernetesCluster resource named `cluster1` with `cluster.local`
              as its cluster domain:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: KubernetesCluster
              metadata:
                name: cluster1
                namespace: gloo-mesh
              spec:
                clusterDomain: cluster.local
              ```

              The following example adds the region label to the KubernetesCluster resource:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: KubernetesCluster
              metadata:
                name: cluster1
                namespace: gloo-mesh
                labels:
                  region: us-east
              spec:
                clusterDomain: cluster.local
              ```
            properties:
              clusterDomain:
                description: 'Optional: The cluster domain suffix this Cluster is
                  configured with. Defaults to ''cluster.local''.'
                type: string
            type: object
          status:
            description: Reflects the status of the Kubernetes cluster
            properties:
              generic:
                description: Indicates the state of the Gloo Mesh agent connected
                  to the Gloo Mesh Server.
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                  updatedAt:
                    description: The last time the status was updated.
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 35baccbd1408e9d0
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: roottrustpolicies.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RootTrustPolicy
    listKind: RootTrustPolicyList
    plural: roottrustpolicies
    shortNames:
    - rtp
    singular: roottrustpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RootTrustPolicy is used to designate the root of trust, including the trust domain and root certificates used by one or more service meshes.
              A shared RootTrustPolicy is currently required to support communication between workloads and destinations running in different meshes. In the future Gloo Mesh will support cross-mesh connectivity using a Limited Trust model (where participating meshes are permitted to use separate roots of trust).
            properties:
              applyToMeshes:
                description: |-
                  select the meshes where the root of trust will be applied.
                  if left empty, will apply to all Meshes in the workspace.
                items:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - istio
                  - required:
                    - istio
                  properties:
                    istio:
                      description: options for selecting istio Mesh control planes.
                      properties:
                        clusterSelector:
                          additionalProperties:
                            type: string
                          description: |-
                            match the labels of the cluster where istiod is deployed.
                            omit to select across all clusters.
                          type: object
                        namespace:
                          description: |-
                            match the name of the namespace where istiod is deployed.
                            omit to select across all namespaces.
                          type: string
                        revision:
                          description: |-
                            istio.io/revision of Istio to select. regex supported.
                            omit to select across all revisions.
                          type: string
                        selector:
                          additionalProperties:
                            type: string
                          description: |-
                            select via the labels of the istiod deployment.
                            omit to select across all labels.
                          type: object
                      type: object
                  type: object
                type: array
              config:
                description: The details of the root of trust to apply to the selected
                  meshes.
                oneOf:
                - not:
                    anyOf:
                    - properties:
                        mgmtServerCa:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - generated
                              - required:
                                - secretRef
                          - required:
                            - generated
                          - required:
                            - secretRef
                      required:
                      - mgmtServerCa
                    - properties:
                        agentCa:
                          oneOf:
                          - not:
                              anyOf:
                              - properties:
                                  vault:
                                    allOf:
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - caBundle
                                          - required:
                                            - caSecretRef
                                          - required:
                                            - caLocalPath
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                    - oneOf:
                                      - not:
                                          anyOf:
                                          - required:
                                            - tokenSecretRef
                                          - properties:
                                              kubernetesAuth:
                                                oneOf:
                                                - not:
                                                    anyOf:
                                                    - required:
                                                      - serviceAccountRef
                                                    - required:
                                                      - mountedSaPath
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            required:
                                            - kubernetesAuth
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                required:
                                - vault
                          - properties:
                              vault:
                                allOf:
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                            required:
                            - vault
                      required:
                      - agentCa
                - properties:
                    mgmtServerCa:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - generated
                          - required:
                            - secretRef
                      - required:
                        - generated
                      - required:
                        - secretRef
                  required:
                  - mgmtServerCa
                - properties:
                    agentCa:
                      oneOf:
                      - not:
                          anyOf:
                          - properties:
                              vault:
                                allOf:
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                            required:
                            - vault
                      - properties:
                          vault:
                            allOf:
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                        required:
                        - vault
                  required:
                  - agentCa
                properties:
                  agentCa:
                    description: |-
                      Configures an Intermediate Certificate Authority which selected meshes will use to generate intermediate certificates.
                      The CA being used must be configured to generate the intermediate certificates.
                    properties:
                      vault:
                        description: Use vault as the intermediate CA source
                        properties:
                          caBundle:
                            description: Inline CA bytes
                            format: binary
                            type: string
                          caLocalPath:
                            description: Path to a local file containing the CA bytes
                            type: string
                          caPath:
                            description: |-
                              `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                              "my_pki_mount/sign/my-role-name".
                            type: string
                          caSecretRef:
                            description: |-
                              Reference to a secret containing the CA bytes.
                              The CA should be stored by the key `root-cert.pem`
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                          csrPath:
                            description: |-
                              `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                              "my_pki_mount/intermediate/generate/exported".
                              "exported" is necessary here as istio needs access to the private key
                              See vault docs here: https://www.vaultproject.io/api-docs/secret/pki#parameters-4
                            type: string
                          kubernetesAuth:
                            description: |-
                              Kubernetes authenticates with Vault by passing the ServiceAccount
                              token stored in the named Secret resource to the Vault server.
                            properties:
                              mountPath:
                                description: |-
                                  The Vault mountPath here is the mount path to use when authenticating with
                                  Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                                  `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                                  default value "/v1/auth/kubernetes" will be used.
                                type: string
                              mountedSaPath:
                                description: |-
                                  File System path to grab the service account token from.
                                  Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                                type: string
                              role:
                                description: |-
                                  A required field containing the Vault Role to assume. A Role binds a
                                  Kubernetes ServiceAccount with a set of Vault policies.
                                type: string
                              secretTokenKey:
                                description: |-
                                  Key to search for the sa_token
                                  Default to "token"
                                type: string
                              serviceAccountRef:
                                description: Reference to service account, other than
                                  the one mounted to the current pod.
                                properties:
                                  name:
                                    description: name of the resource being referenced
                                    type: string
                                  namespace:
                                    description: namespace of the resource being referenced
                                    type: string
                                type: object
                            type: object
                          namespace:
                            description: |-
                              Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                              More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                            type: string
                          server:
                            description: 'Server is the connection address for the
                              Vault server, e.g: "https://vault.example.com:8200".'
                            type: string
                          tokenSecretRef:
                            description: TokenSecretRef authenticates with Vault by
                              presenting a token.
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                        type: object
                    type: object
                  autoRestartPods:
                    description: |-
                      This setting specifies whether or not workload pods should be automatically restarted
                      upon completion of a successful certificate issuance.
                    type: boolean
                  intermediateCertOptions:
                    description: Configuration options for generated intermediate
                      certs.
                    properties:
                      orgName:
                        description: Root cert organization name. Defaults to "gloo-mesh".
                        type: string
                      rsaKeySizeBytes:
                        description: Size in bytes of the root cert's private key.
                          Defaults to 4096.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      secretRotationGracePeriodRatio:
                        description: |-
                          The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                          we would refresh 6 minutes before expiration
                        format: float
                        type: number
                      ttlDays:
                        description: Number of days before root cert expires. Defaults
                          to 365.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  mgmtServerCa:
                    description: |-
                      Configure a Root Certificate Authority which will be shared by all Meshes associated with this RootTrustPolicy.
                      If this is not provided, a self-signed certificate will be generated by Gloo Mesh.
                    properties:
                      generated:
                        description: Generate a self-signed root certificate with
                          the given options.
                        properties:
                          orgName:
                            description: Root cert organization name. Defaults to
                              "gloo-mesh".
                            type: string
                          rsaKeySizeBytes:
                            description: Size in bytes of the root cert's private
                              key. Defaults to 4096.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          secretRotationGracePeriodRatio:
                            description: |-
                              The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                              we would refresh 6 minutes before expiration
                            format: float
                            type: number
                          ttlDays:
                            description: Number of days before root cert expires.
                              Defaults to 365.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      secretRef:
                        description: |-
                          Name of a Kubernetes Secret in the same namespace as the RootTrustPolicy containing the root certificate authority.
                          Provided certificates must conform to a specified format, [documented here]({{< versioned_link_path fromRoot="/setup/prod/certs/cert-architecture/#required-certificates" >}}).
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                type: object
            type: object
          status:
            description: reflects the status of the RootTrustPolicy
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: e200bd1534e808f0
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: extauthservers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: ExtAuthServer
    listKind: ExtAuthServerList
    plural: extauthservers
    shortNames:
    - ess
    singular: extauthserver
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              ExtAuthServer is used configure the backend server used to enforce ExtAuthPolicies.
              All ExtAuthPolicies in a workspace require an ExtAuthServer to in order to function.
              If no ExtAuthServer is provided, a default configuration will be used.
              Currently Gloo Mesh only supports a single ExtAuthServer per workspace.
            properties:
              clearRouteCache:
                description: |-
                  Clears route cache in order to allow the external authorization service to correctly affect
                  routing decisions. Filter clears all cached routes when:

                  1. The field is set to *true*.

                  2. The status returned from the authorization service is a HTTP 200 or gRPC 0.

                  3. At least one *authorization response header* is added to the client request, or is used for
                  altering another client request header.
                type: boolean
              destinationServer:
                description: |-
                  Select the destination of the external auth service for Gloo to use to authenticate traffic, such as the Gloo external auth service or your own external auth service.
                  Make sure to select the correct cluster and namespace of the external auth service.
                  For example, although you create this ExtAuthServer resource in the management cluster in most cases, remember that the Gloo external auth service runs in each workload cluster.
                  If omitted, Gloo looks for a service with the name 'extauth' in the agent namespace in each cluster where the external auth service is deployed.
                properties:
                  kind:
                    description: the kind of destination being selected. defaults
                      to Kubernetes Service.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted.
                      required if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects
                          being targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  ref:
                    description: reference to the destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: select a subset of the destination's endpoints for
                      routing based on their labels.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              failureModeAllow:
                description: |-
                  In case of a failure or timeout querying the auth server, normally a request is denied.
                  if this is set to true, the request will be allowed.
                type: boolean
              httpService:
                description: If this is set, communication to the upstream will be
                  via HTTP and not GRPC.
                properties:
                  pathPrefix:
                    description: Sets a prefix to the value of authorization request
                      header *Path*.
                    type: string
                  request:
                    properties:
                      allowedHeaders:
                        description: |-
                          These headers will be copied from the incoming request to the request going
                          to the auth server. Note that in addition to the user's supplied matchers:

                          1. *Host*, *Method*, *Path* and *Content-Length* are automatically included to the list.

                          2. *Content-Length* will be set to 0 and the request to the authorization service will not have
                          a message body.
                        items:
                          type: string
                        type: array
                      headersToAdd:
                        additionalProperties:
                          type: string
                        description: |-
                          These headers that will be included to the request to authorization service. Note that
                          client request of the same key will be overridden.
                        type: object
                    type: object
                  response:
                    properties:
                      allowedClientHeaders:
                        description: |-
                          When this. is set, authorization response headers that will be added to the client's response when auth request is denied.
                          Note that when this list is *not* set, all the authorization response headers, except *Authority
                          (Host)* will be in the response to the client. When a header is included in this list, *Path*,
                          *Status*, *Content-Length*, *WWW-Authenticate* and *Location* are automatically added.
                        items:
                          type: string
                        type: array
                      allowedUpstreamHeaders:
                        description: |-
                          When this is set, authorization response headers that have a will be added to the original client request and sent to the upstream.
                          Note that coexistent headers will be overridden.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              requestBody:
                description: Set this if you also want to send the body of the request,
                  and not just the headers.
                properties:
                  allowPartialMessage:
                    description: |-
                      When this field is true, Envoy will buffer the message until *max_request_bytes* is reached.
                      The authorization request will be dispatched and no 413 HTTP error will be returned by the
                      filter.
                    type: boolean
                  maxRequestBytes:
                    description: |-
                      Sets the maximum size of a message body that the filter will hold in memory. Envoy will return
                      *HTTP 413* and will *not* initiate the authorization process when buffer reaches the number
                      set in this field. Note that this setting will have precedence over failure_mode_allow.
                      Defaults to 4KB.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  packAsBytes:
                    description: When this field is true, Envoy will send the body
                      sent to the external authorization service with raw bytes.
                    type: boolean
                type: object
              requestTimeout:
                description: Timeout for the ext auth service to respond. Defaults
                  to 100ms
                type: string
              statPrefix:
                description: |-
                  Optional additional prefix to use when emitting statistics.
                  This allows to distinguish emitted statistics between configured ext_authz filters in an HTTP filter chain.
                type: string
              statusOnError:
                description: |-
                  Sets the HTTP status that is returned to the client when there is a network error between the
                  filter and the authorization server. The default status is HTTP 403 Forbidden.
                  If set, this must be one of the following:
                  - 100
                  - 200 201 202 203 204 205 206 207 208 226
                  - 300 301 302 303 304 305 307 308
                  - 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 421 422 423 424 426 428 429 431
                  - 500 501 502 503 504 505 506 507 508 510 511
                maximum: 4294967295
                minimum: 0
                type: integer
              transportApiVersion:
                description: |-
                  Determines the API version for the `ext_authz` transport protocol that will be used by Envoy
                  to communicate with the auth server. Defaults to `V3`. For more info, see the `transport_api_version` field
                  [here](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/ext_authz/v3/ext_authz.proto#extensions-filters-http-ext-authz-v3-extauthz).
                enum:
                - GLOO_MESH_AUTO
                - ENVOY_AUTO
                - V3
                type: string
            type: object
          status:
            description: reflects the status of the ExtAuthServer
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the object's metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this object.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: d1fdd58c324fa0
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitserversettings.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitServerSettings
    listKind: RateLimitServerSettingsList
    plural: ratelimitserversettings
    shortNames:
    - rlss
    singular: ratelimitserversettings
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitServerSettings is an optional resource used to configure how a client (i.e. a sidecar or gateway proxy) connects to a rate limit server.
              If no RateLimitServerSetting is selected in a RatelimitPolicy, a default configuration will be used.
            properties:
              denyOnFail:
                description: |-
                  Behaviour in case the rate limiting service does not respond back.
                  When it is set to true, Envoy will not allow traffic in case of communication failure between rate limiting service and the proxy.
                  Defaults to false
                type: boolean
              destinationServer:
                description: |-
                  The ratelimit service to ask about ratelimit decisions.
                  The provided reference will be used to search for a service of the given name/namespace on the cluster
                  the traffic policy is applied on

                  If omitted, Gloo Mesh will search for a service with the name rate-limiter in the gloo-mesh namespace.
                properties:
                  kind:
                    description: the kind of destination being selected. defaults
                      to Kubernetes Service.
                    enum:
                    - SERVICE
                    - VIRTUAL_DESTINATION
                    - EXTERNAL_SERVICE
                    type: string
                  port:
                    description: the port on the destination object being targeted.
                      required if the object provides more than one port.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - number
                        - required:
                          - name
                    - required:
                      - number
                    - required:
                      - name
                    properties:
                      name:
                        description: the name of the port on the destination objects
                          being targeted.
                        type: string
                      number:
                        description: the number of the port on the destination objects
                          being targeted.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  ref:
                    description: reference to the destination object by its metadata
                    properties:
                      cluster:
                        description: the cluster of the object. if the field is omitted,
                          Gloo Mesh will use the same cluster as the parent object
                          containing this reference.
                        type: string
                      name:
                        description: the name of the object
                        type: string
                      namespace:
                        description: the namespace of the object. if the field is
                          omitted, Gloo Mesh will use the same namespace as the parent
                          object containing this reference.
                        type: string
                    type: object
                  subset:
                    additionalProperties:
                      type: string
                    description: select a subset of the destination's endpoints for
                      routing based on their labels.
                    type: object
                  weight:
                    description: |-
                      Specify the proportion of traffic to be forwarded to this destination.
                      Weights across all of the `destinations` must sum to 100.
                      Weight is only relevant when used in the context of a route with multiple destinations.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              requestTimeout:
                description: |-
                  The timeout in milliseconds for the rate limit service RPC. Defaults to 100ms.
                  Behaviour after request timeout is reached is set by `deny_on_fail`.
                type: string
            type: object
          status:
            description: The current status of the `RateLimitServerSettings`.
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the RateLimitServerSettings metadata.
                  If the `observedGeneration` does not match `metadata.generation`,
                  Gloo Mesh has not processed the most recent version of this resource.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 8eb8bedead764e5e
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: ratelimitserverconfigs.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: RateLimitServerConfig
    listKind: RateLimitServerConfigList
    plural: ratelimitserverconfigs
    shortNames:
    - rlsc
    singular: ratelimitserverconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RateLimitServerConfig is used to configure the ratelimit rules enforced by the server.
              All RateLimitPolicy resources in a workspace require a RateLimitServerConfig to in order to configure ratelimit rules.
              If no RateLimitServerConfig is provided, no ratelimit rules will be enforced.
            oneOf:
            - not:
                anyOf:
                - required:
                  - raw
            - required:
              - raw
            properties:
              destinationServers:
                description: Required field to specify the ratelimit servers that
                  will enforce the defined descriptors.
                items:
                  properties:
                    kind:
                      description: the kind of destination being selected. defaults
                        to Kubernetes Service.
                      enum:
                      - SERVICE
                      - VIRTUAL_DESTINATION
                      - EXTERNAL_SERVICE
                      type: string
                    port:
                      description: the port on the destination object being targeted.
                        required if the object provides more than one port.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    ref:
                      description: reference to the destination object by its metadata
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                    subset:
                      additionalProperties:
                        type: string
                      description: select a subset of the destination's endpoints
                        for routing based on their labels.
                      type: object
                    weight:
                      description: |-
                        Specify the proportion of traffic to be forwarded to this destination.
                        Weights across all of the `destinations` must sum to 100.
                        Weight is only relevant when used in the context of a route with multiple destinations.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
              raw:
                description: Define a policy using the raw configuration format used
                  by the ratelimit server.
                properties:
                  descriptors:
                    description: |-
                      The descriptors that will be applied to the server.
                      {{/* Note: validation of this field disabled because it slows down cue tremendously*/}}
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                  setDescriptors:
                    description: |-
                      The set descriptors that will be applied to the server.
                      {{/* Note: validation of this field disabled because it slows down cue tremendously*/}}
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    type: array
                type: object
            type: object
          status:
            description: The current status of the `RateLimitServerConfig`.
            properties:
              observedGeneration:
                description: |-
                  The most recent generation observed in the the RateLimitServerConfig metadata.
                  If the `observedGeneration` does not match `metadata.generation`,
                  Gloo Mesh has not processed the most recent version of this resource.
                format: int64
                type: integer
              state:
                description: Whether the resource has been accepted as valid and processed
                  in the Gloo Mesh config translation.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 595559d494b86b51
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: dashboards.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Dashboard
    listKind: DashboardList
    plural: dashboards
    singular: dashboard
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              `Dashboard` describes the settings for the Gloo Mesh Enterprise dashboard.
              Currently, this resource is only used to secure the Gloo Mesh Enterprise Dashboard by
              requiring authentication with an OpenID Connect identity provider.
              Users accessing the dashboard will be required to authenticate with the OIDC provider
              and all requests to retrieve data from the API will also be authenticated.

              The following example sets up OIDC authentication:
              ```yaml
              apiVersion: admin.gloo.solo.io/v2
              kind: Dashboard
              metadata:
                name: settings
                namespace: gloo-mesh
              spec:
                authn:
                  oidc:
                    appUrl: https://localhost:8080
                    clientId: $CLIENT_ID
                    clientSecretName: dashboard
                    issuerUrl: https://accounts.google.com
                 ```
            properties:
              authn:
                description: Configuration used to authenticate incoming requests.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - oidc
                - required:
                  - oidc
                properties:
                  oidc:
                    properties:
                      appUrl:
                        description: URL to redirect to after successful auth.
                        type: string
                      authEndpointQueryParams:
                        additionalProperties:
                          type: string
                        description: |-
                          Extra query parameters to apply to the authorization request to the
                          identity provider. For example, using the PKCE flow
                          (https://www.oauth.com/oauth2-servers/pkce/authorization-request/) by
                          setting `code_challenge` and `code_challenge_method`.
                        type: object
                      caCertConfigmapName:
                        description: |-
                          A name of a config map containing root cert to use when talking with
                          the OIDC provider. The config map must contain the a key named "ca.crt" with PEM encoded
                          CA.
                        type: string
                      callbackPath:
                        description: Path to handle the OIDC callback.
                        type: string
                      clientId:
                        description: The client ID from the issuer
                        type: string
                      clientSecretName:
                        description: The client secret from the issuer
                        type: string
                      discoveryOverride:
                        description: |-
                          Ensure that certain values are set regardless of what the OIDC
                          provider returns.
                        properties:
                          authEndpoint:
                            description: URL of the provider authorization endpoint.
                            type: string
                          authMethods:
                            description: |-
                              List of client authentication methods supported by the provider
                              token endpoint.
                            items:
                              type: string
                            type: array
                          claims:
                            description: List of claim types that the provider supports.
                            items:
                              type: string
                            type: array
                          idTokenAlgs:
                            description: |-
                              List of json web signature signing algorithms that the provider
                              supports for encoding claims in a JWT.
                            items:
                              type: string
                            type: array
                          jwksUri:
                            description: URL of the provider JSON web key set.
                            type: string
                          responseTypes:
                            description: List of response types that the provider
                              supports.
                            items:
                              type: string
                            type: array
                          scopes:
                            description: List of scope values that the provider supports.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: List of subject identifier types that the
                              provider supports.
                            items:
                              type: string
                            type: array
                          tokenEndpoint:
                            description: URL of the provider token endpoint.
                            type: string
                        type: object
                      discoveryPollInterval:
                        description: How often to poll the OIDC issuer for new configuration.
                        type: string
                      issuerUrl:
                        description: |-
                          The url of the issuer. We will look for OIDC information in:
                            {{ issuerURL }}/.well-known/openid-configuration
                        type: string
                      jwksCacheRefreshPolicy:
                        description: |-
                          If a user executes a request with a key that is not found in the
                          JWKS, it could be that the keys have rotated on the remote source,
                          and not yet in the local cache. This policy lets you define the
                          behavior for how to refresh the local cache during a request where an
                          invalid key is provided
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - never
                            - required:
                              - always
                            - required:
                              - maxIdpReqPerPollingInterval
                        - required:
                          - never
                        - required:
                          - always
                        - required:
                          - maxIdpReqPerPollingInterval
                        properties:
                          always:
                            description: |-
                              If a key is not in the cache, fetch the most recent keys from
                              the IdP and update the cache. NOTE: This should only be done
                              in trusted environments, since missing keys will each trigger
                              a request to the IdP. Using this in an environment exposed to
                              the internet will allow malicious agents to execute a DDoS
                              attack by spamming protected endpoints with tokens signed by
                              invalid keys.
                            maxProperties: 0
                            type: object
                          maxIdpReqPerPollingInterval:
                            description: |-
                              If a key is not in the cache, fetch the most recent keys from
                              the IdP and update the cache. This value sets the number of
                              requests to the IdP per polling interval. If that limit is
                              exceeded, we will stop fetching from the IdP for the
                              remainder of the polling interval.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          never:
                            description: |-
                              Never refresh the local JWKS cache on demand. If a key is not
                              in the cache, it is assumed to be malicious. This is the
                              default policy since we assume that IdPs publish keys before
                              they rotate them, and frequent polling finds the newest keys.
                            maxProperties: 0
                            type: object
                        type: object
                      logoutPath:
                        description: Path used to logout. If not provided, logout
                          will be disabled.
                        type: string
                      scopes:
                        description: Scopes to request in addition to 'openid'.
                        items:
                          type: string
                        type: array
                      session:
                        description: Configuration for session storage.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - cookie
                            - required:
                              - redis
                        - required:
                          - cookie
                        - required:
                          - redis
                        properties:
                          cookie:
                            description: Store all session data in the cookie itself
                            type: object
                          cookieOptions:
                            description: Set-Cookie options
                            properties:
                              domain:
                                description: Domain of the cookie.
                                type: string
                              maxAge:
                                description: |-
                                  Max age of the cookie. If unset, the default of 30 days will be
                                  used. To disable expiration, set explicitly to 0.
                                maximum: 4294967295
                                minimum: 0
                                nullable: true
                                type: integer
                              notSecure:
                                description: |-
                                  Use an insecure cookie.
                                  Should only be used for testing and in trusted environments.
                                type: boolean
                              path:
                                description: |-
                                  Path of the cookie. Defaults to "/", set to "" to disable the
                                  option.
                                nullable: true
                                type: string
                            type: object
                          redis:
                            description: Store the session data in a Redis instance.
                            properties:
                              allowRefreshing:
                                description: |-
                                  When set, refresh expired id-tokens using the refresh-token. Defaults to true.
                                  Explicitly set to false to disable refreshing.
                                nullable: true
                                type: boolean
                              cookieName:
                                description: Cookie name to set and store the session
                                  id. If empty the default "__session" is used.
                                type: string
                              db:
                                description: db to use. can leave unset for db 0.
                                format: int32
                                type: integer
                              host:
                                description: address of the redis. can be address:port
                                  or unix://path/to/unix.sock
                                type: string
                              keyPrefix:
                                description: Key prefix inside redis
                                type: string
                              poolSize:
                                description: |-
                                  size of the connection pool. can leave unset for default.
                                  defaults to 10 connections per every CPU
                                format: int32
                                type: integer
                            type: object
                        type: object
                      tokenEndpointQueryParams:
                        additionalProperties:
                          type: string
                        description: |-
                          Extra query parameters to apply to the token request to the identity
                          provider. For example, using the PKCE flow
                          (https://www.oauth.com/oauth2-servers/pkce/authorization-request/) by
                          setting `code_challenge` and `code_challenge_method`.
                        type: object
                      userMapping:
                        description: |-
                          If set, the ID token will used to infer user identity, that can be used to make
                          authorization decisions.
                          If not specified, no authorization will be made.
                        properties:
                          groupsClaim:
                            description: |-
                              If specified, causes the OIDCAuthenticator to try to populate the user's
                              groups with an ID Token field. If the GroupsClaim field is present in an ID Token the value
                              must be a string or list of strings.
                            type: string
                          groupsPrefix:
                            description: |-
                              If specified, causes claims mapping to group names to be prefixed with the
                              value. A value "oidc:" would result in groups like "oidc:engineering" and "oidc:marketing".
                            type: string
                          usernameClaim:
                            description: The JWT field to use as the user's username.
                            type: string
                          usernamePrefix:
                            description: |-
                              If specified, causes claims mapping to username to be prefix with
                              the provided value. A value "oidc:" would result in usernames like "oidc:john".
                            type: string
                        type: object
                    type: object
                type: object
              authz:
                description: Configuration used to authorize incoming requests.
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - multiClusterRbac
                - required:
                  - multiClusterRbac
                properties:
                  multiClusterRbac:
                    description: |-
                      Enable multi cluster RBAC. When this is enabled, Gloo Mesh Enterprise will use RBAC resources
                      from managed clusters to determine if users are allowed to see resources in the dashbaord.
                      For this to work, the dashboard and the kubernetes clusters need to have the same identity
                      source (i.e. OIDC with the same user and group claims).
                      When using OIDC, make sure to configure the userMapping field.
                    type: object
                type: object
            type: object
          status:
            properties:
              errors:
                description: Any errors encountered while processing Settings object.
                items:
                  type: string
                type: array
              observedGeneration:
                description: |-
                  The most recent generation observed in the the Dashboard metadata.
                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                  recent version of this resource.
                format: int64
                type: integer
              state:
                description: |-
                  The state of the overall resource.
                  It will only show accepted if no processing errors encountered.
                enum:
                - PENDING
                - ACCEPTED
                - INVALID
                - WARNING
                - FAILED
                - UNLICENSED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: bcf5bc477d37838b
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: istiolifecyclemanagers.admin.gloo.solo.io
spec:
  group: admin.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: IstioLifecycleManager
    listKind: IstioLifecycleManagerList
    plural: istiolifecyclemanagers
    singular: istiolifecyclemanager
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              clusters:
                description: The clusters where the Istio should be installed.
                items:
                  properties:
                    name:
                      description: |-
                        The name of the cluster that Istio should be installed in. This should
                        matched the registered cluster name.
                      type: string
                    trustDomain:
                      description: |-
                        [Optional] The trust domain value that should be set for this cluster's
                        Istio installations. This value will be set in the installation's mesh
                        config. (See https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1)
                        Defaults to the cluster's name.
                      type: string
                  type: object
                type: array
              defaultRevision:
                description: |-
                  Istio Default Revsion that will be used as the default installation.
                  Resources without the istio.io/rev label will use this revision. Updating this can be useful for switching over Canary deployments.
                type: string
              installations:
                description: |-
                  List of Istio installations. It is recommended to split
                  the Istio control plane and Istio gateways into separate
                  installations, to facilitate easier Istio upgrades in the future.
                  Note that Istio installation versions must be the same.
                items:
                  properties:
                    istioOperatorSpec:
                      description: |-
                        Specs for the IstioOperators that should be applied.
                        See https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    name:
                      description: A unique identifier for the given Istio installation
                      type: string
                  type: object
                type: array
              revision:
                description: |-
                  Istio Revsion that will be used to represent this installation.
                  Resources that want to leverage this installation will need to supply the revision as the following label value istio.io/rev.
                type: string
              uninstallRevisions:
                description: |-
                  List of Istio revisions that Gloo Mesh should uninstall. The uninstall
                  will only be done if the revision was originally installed by the same
                  IstioLifecycleManager.
                  Associated revisions can be seen in the IstioLifecycleManager's status.
                items:
                  type: string
                type: array
            type: object
          status:
            properties:
              clusters:
                additionalProperties:
                  properties:
                    active:
                      description: |-
                        The Istio installation that is considered active. This is the stable,
                        pre-upgrade installation.
                      properties:
                        lastObservedInstallations:
                          description: List of the last observed Istio installations
                          items:
                            properties:
                              istioOperatorSpec:
                                description: |-
                                  Specs for the IstioOperators that should be applied.
                                  See https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              name:
                                description: A unique identifier for the given Istio
                                  installation
                                type: string
                            type: object
                          type: array
                        message:
                          description: A human readable message about the current
                            state of the IstioInstallationInstance.
                          type: string
                        revision:
                          description: The revision that Gloo Mesh created for the
                            Istio installation
                          type: string
                        state:
                          description: State of the Istio installation
                          enum:
                          - PENDING
                          - FAILED
                          - INSTALLING_CONTROLLER
                          - CONTROLLER_INSTALLED
                          - CONTROLLER_INSTALL_FAILED
                          - INSTALLING_CONTROL_PLANE
                          - CONTROL_PLANE_FAILED
                          - INSTALLING_GATEWAY
                          - UPGRADE_PENDING
                          - HEALTHY
                          - UNHEALTHY
                          type: string
                      type: object
                    canary:
                      description: |-
                        The pending Istio installation that was created as part of a canary
                        upgrade. The canary will become the active installation when the
                        active installation is uninstalled.
                      properties:
                        lastObservedInstallations:
                          description: List of the last observed Istio installations
                          items:
                            properties:
                              istioOperatorSpec:
                                description: |-
                                  Specs for the IstioOperators that should be applied.
                                  See https://istio.io/latest/docs/reference/config/istio.operator.v1alpha1/
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              name:
                                description: A unique identifier for the given Istio
                                  installation
                                type: string
                            type: object
                          type: array
                        message:
                          description: A human readable message about the current
                            state of the IstioInstallationInstance.
                          type: string
                        revision:
                          description: The revision that Gloo Mesh created for the
                            Istio installation
                          type: string
                        state:
                          description: State of the Istio installation
                          enum:
                          - PENDING
                          - FAILED
                          - INSTALLING_CONTROLLER
                          - CONTROLLER_INSTALLED
                          - CONTROLLER_INSTALL_FAILED
                          - INSTALLING_CONTROL_PLANE
                          - CONTROL_PLANE_FAILED
                          - INSTALLING_GATEWAY
                          - UPGRADE_PENDING
                          - HEALTHY
                          - UNHEALTHY
                          type: string
                      type: object
                  type: object
                description: |-
                  The status of each Istio installation that is being managed by Gloo Mesh, where
                  the key is the cluster name of the installation.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
