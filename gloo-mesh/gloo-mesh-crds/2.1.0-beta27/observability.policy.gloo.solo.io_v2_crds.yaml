# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 153beb80b066363c
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: accesslogpolicies.observability.policy.gloo.solo.io
spec:
  group: observability.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: AccessLogPolicy
    listKind: AccessLogPolicyList
    plural: accesslogpolicies
    singular: accesslogpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              AccessLogPolicy is used to collect access logs from workloads which have injected (sidecars) or are standalone proxies (gateways).
              AccessLogPolicies are applied at the *Workload* level.
            properties:
              applyToWorkloads:
                description: |-
                  Select the workloads where access logs will be collected.
                  If left empty, will apply to all workloads in the workspace.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The details of the policy specifying how to collect access
                  logs from the selected workloads.
                properties:
                  filters:
                    description: |-
                      Configure criteria for determining which access logs will be recorded.
                      The list is disjunctive, a request will be recorded if it matches any filter.
                      Leave empty to emit all access logs.
                    items:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - statusCodeMatcher
                          - required:
                            - headerMatcher
                      - required:
                        - statusCodeMatcher
                      - required:
                        - headerMatcher
                      properties:
                        headerMatcher:
                          description: Matches against a request or response header.
                            Omit to match any headers.
                          properties:
                            invertMatch:
                              description: |-
                                If set to true, the result of the match will be inverted. Defaults to false.

                                   Examples:

                                       - name=foo, invert_match=true: matches if no header named `foo` is present
                                       - name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                       - name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present.
                              type: boolean
                            name:
                              description: Specify the name of the header in the request.
                              type: string
                            regex:
                              description: Specify whether the header value should
                                be treated as regex.
                              type: boolean
                            value:
                              description: |-
                                Specify the value of the header. If the value is absent a request that
                                has the name header will match, regardless of the headerâ€™s value.
                              type: string
                          type: object
                        statusCodeMatcher:
                          description: Matches against a response status code. Omit
                            to match any status code.
                          properties:
                            comparator:
                              description: The comparison type used for matching.
                              enum:
                              - EQ
                              - GE
                              - LE
                              type: string
                            value:
                              description: The status code value to match against.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                      type: object
                    type: array
                  includedFilterStateObjects:
                    description: Specify filter state objects to include in access
                      logs.
                    items:
                      type: string
                    type: array
                  includedRequestHeaders:
                    description: Specify request headers to include in access logs.
                    items:
                      type: string
                    type: array
                  includedResponseHeaders:
                    description: Specify response headers to include in access logs.
                    items:
                      type: string
                    type: array
                  includedResponseTrailers:
                    description: Specify response trailers to include in access logs.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: Reflects the status of the AccessLogPolicy.
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedWorkloadRefs:
                items:
                  properties:
                    kind:
                      enum:
                      - UNRECOGNIZED_WORKLOAD
                      - DEPLOYMENT
                      - DAEMON_SET
                      - STATEFUL_SET
                      - REPLICA_SET
                      type: string
                    ref:
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              selectedWorkloads:
                description: |-
                  Workloads selected by the policy
                  DEPRECATED: Use selected_workload_refs instead
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                              updatedAt:
                                description: The last time the status was updated.
                                format: date-time
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
