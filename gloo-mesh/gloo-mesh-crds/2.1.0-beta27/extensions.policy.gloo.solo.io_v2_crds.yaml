# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: bc8923ace23abad5
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: wasmdeploymentpolicies.extensions.policy.gloo.solo.io
spec:
  group: extensions.policy.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: WasmDeploymentPolicy
    listKind: WasmDeploymentPolicyList
    plural: wasmdeploymentpolicies
    shortNames:
    - wdp
    singular: wasmdeploymentpolicy
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              WasmDeploymentPolicy is used to deploy Wasm filters to workloads which have injected (sidecars) or are standalone proxies (gateways).
              WasmDeploymentPolicies are applied at the *Workload* level.
            properties:
              applyToWorkloads:
                description: |-
                  select the workloads where access logs will be collected.
                  if left empty, will apply to all workloads in the workspace.
                items:
                  properties:
                    kind:
                      description: The kind of workload being selected. Defaults to
                        Kube.
                      enum:
                      - KUBE
                      - VM
                      type: string
                    port:
                      description: |-
                        The port to select on the selected workloads.
                        Only applies to policies which select specific workload ports, such as the WasmDeploymentPolicy.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - number
                          - required:
                            - name
                      - required:
                        - number
                      - required:
                        - name
                      properties:
                        name:
                          description: the name of the port on the destination objects
                            being targeted.
                          type: string
                        number:
                          description: the number of the port on the destination objects
                            being targeted.
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                      type: object
                    selector:
                      description: Selector used to match Workload objects by their
                        metadata.
                      properties:
                        cluster:
                          description: |-
                            Only select objects in the matching cluster. If the field is omitted, Gloo Mesh will select
                            matching objects across all clusters available in the parent object's workspace.
                          type: string
                        labels:
                          additionalProperties:
                            type: string
                          description: labels matching those of the object
                          type: object
                        name:
                          description: |-
                            Only select objects with the matching name. If the field is omitted, Gloo Mesh will select
                            matching objects with any name available in the parent object's workspace.
                          type: string
                        namespace:
                          description: |-
                            Only select objects in the matching namespace. If the field is omitted, Gloo Mesh will select
                            matching objects across all namespaces available in the parent object's workspace.
                          type: string
                        workspace:
                          description: |-
                            Only select objects in the given workspace. If the field is omitted, Gloo Mesh will select
                            matching objects across all workspaces available in the parent object's workspace.
                          type: string
                      type: object
                  type: object
                type: array
              config:
                description: The configuration of the specifying the WASM filters
                  to apply to the selected workloads.
                properties:
                  filters:
                    description: Specify WASM filter parameters.
                    items:
                      allOf:
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - localPathSource
                            - required:
                              - httpUriSource
                            - required:
                              - wasmImageSource
                        - required:
                          - localPathSource
                        - required:
                          - httpUriSource
                        - required:
                          - wasmImageSource
                      - oneOf:
                        - not:
                            anyOf:
                            - required:
                              - staticFilterConfig
                            - required:
                              - dynamicFilterConfig
                        - required:
                          - staticFilterConfig
                        - required:
                          - dynamicFilterConfig
                      properties:
                        dynamicFilterConfig:
                          description: |-
                            Provide configuration from a dynamic configuration source.
                            This is used to connect proxies to a user-provided configuration server
                            rather than using the WasmDeployment CR to update filter configuration.
                            NOTE: Not currently implemented. This field serves as a placeholder.
                            passing it to the plugin. `google.protobuf.BytesValue` and
                            `google.protobuf.StringValue` are passed directly without the wrapper.
                            TODO(ilackarms): implement with dynamic filter config source (FCDS) https://github.com/envoyproxy/envoy/issues/7867
                          type: string
                        filterContext:
                          description: |-
                            The specific config generation context to which to attach the filter. Istio
                            generates envoy configuration in the context of a gateway,
                            inbound traffic to sidecar and outbound traffic from sidecar.
                            Uses the Istio default (`ANY`).
                          enum:
                          - ANY
                          - SIDECAR_INBOUND
                          - SIDECAR_OUTBOUND
                          - GATEWAY
                          type: string
                        httpUriSource:
                          description: |-
                            Select `http_uri_source` to deploy the filter from an HTTP/S URI accessible
                            to the workload proxy. Note that Gloo Mesh cannot verify
                            whether the target workload proxy containers have HTTP access the given URI.
                            If filters do not load, please inspect the sidecar proxy logs.
                            TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status
                            TODO(ilackarms): we may need to provide options for customizing the Cluster given to envoy along with the HTTP Fetch URI. currently Gloo Mesh will create a simple plaintext HTTP cluster from the Host/Port specified in the URI.
                          properties:
                            sha:
                              description: Required. The Sha256 Checksum of the filter
                                binary (will be verified by the proxy).
                              type: string
                            uri:
                              description: The HTTP URI from which to fetch the filter.
                              type: string
                          type: object
                        insertBeforeFilter:
                          description: |-
                            The filter in the Envoy HTTP Filter Chain immediately before which the WASM filter will be
                            inserted.
                            Defaults to `envoy.router`.
                          type: string
                        localPathSource:
                          description: |-
                            Select `local_path_source` to deploy the filter from a file accessible
                            to the workload proxy. Note that Gloo Mesh cannot verify
                            whether the target workload proxy containers contain the given path.
                            If filters do not load, please inspect the sidecar proxy logs.
                            TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status
                          type: string
                        rootId:
                          description: |-
                            The `root id` must match the `root id` defined inside the filter.
                            If the user does not provide this field, Gloo Mesh will pull the image
                            and set it from the `filter_conf` contained in the image config.
                            Note that if the `filter_source` is not set to `wasm_image_source`, this field is required.
                          type: string
                        staticFilterConfig:
                          description: |-
                            Provide configuration as a static
                            `google.protobuf.Struct` is serialized as JSON before
                            passing it to the plugin. `google.protobuf.BytesValue` and
                            `google.protobuf.StringValue` are passed directly without the wrapper.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        vmId:
                          description: |-
                            An ID which will be used along with a hash of the wasm code
                            (or the name of the registered Null VM plugin) to determine which VM will be used to load the WASM filter.
                            All filters on the same proxy which use the same `vm_id` and code within will use the same VM.
                            May be left blank. Sharing a VM between plugins can reduce memory utilization and make sharing of data easier which may have security implications.
                          type: string
                        wasmImageSource:
                          description: |-
                            fetch the image from a [WASM OCI Registry](https://webassemblyhub.io/)
                            Images can be built and pushed to registries using `meshctl` and `wasme`.
                          properties:
                            wasmImageTag:
                              description: The full tag of the wasm image. It must
                                include the registry address at the beginning, e.g.
                                "webassemblyhub.io/ilackarms/helloworld:v0.1".
                              type: string
                          type: object
                      type: object
                    type: array
                  weight:
                    description: |-
                      Weight is used to determine the order of WASM Filters when applying
                      multiple WasmDeployments to a single workload.
                      Deployed WASM filters will be sorted in order of
                      highest to lowest weight. WasmDeployments with equal weights will be
                      sorted non-deterministically.
                      Note that all WASM Filters are currently inserted just before the Envoy router filter
                      in the HTTP Connection Manager's HTTP Filter Chain.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
            type: object
          status:
            description: reflects the status of the WasmDeploymentPolicy
            properties:
              global:
                properties:
                  message:
                    description: |-
                      Additional information about the current state of the resource across all
                      workspace clusters.
                    type: string
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in workspace
                      clusters that it exists in.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                type: object
              selectedWorkloadRefs:
                items:
                  properties:
                    kind:
                      enum:
                      - UNRECOGNIZED_WORKLOAD
                      - DEPLOYMENT
                      - DAEMON_SET
                      - STATEFUL_SET
                      - REPLICA_SET
                      type: string
                    ref:
                      properties:
                        cluster:
                          description: the cluster of the object. if the field is
                            omitted, Gloo Mesh will use the same cluster as the parent
                            object containing this reference.
                          type: string
                        name:
                          description: the name of the object
                          type: string
                        namespace:
                          description: the namespace of the object. if the field is
                            omitted, Gloo Mesh will use the same namespace as the
                            parent object containing this reference.
                          type: string
                      type: object
                  type: object
                type: array
              selectedWorkloads:
                description: |-
                  Workloads selected by the policy
                  DEPRECATED: Use selected_workload_refs instead
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
              workspaces:
                additionalProperties:
                  properties:
                    clusters:
                      additionalProperties:
                        properties:
                          generic:
                            properties:
                              message:
                                description: Additional information about the current
                                  state of the resource.
                                type: string
                              observedGeneration:
                                description: |-
                                  The most recent generation observed in the the object's metadata.
                                  If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                                  has not processed the most recent version of this object.
                                format: int64
                                type: integer
                              state:
                                description: |-
                                  Whether the resource has been accepted as valid and processed in the Gloo
                                  Mesh config translation.
                                enum:
                                - PENDING
                                - ACCEPTED
                                - INVALID
                                - WARNING
                                - FAILED
                                - UNLICENSED
                                type: string
                              updatedAt:
                                description: The last time the status was updated.
                                format: date-time
                                type: string
                            type: object
                        type: object
                      description: |-
                        The status of the resource in each cluster within the
                        workspace.
                      type: object
                  type: object
                description: The status of the resource in each workspace that it
                  exists in.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
