# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 26a5d5edaa23edb9
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: issuedcertificates.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: IssuedCertificate
    listKind: IssuedCertificateList
    plural: issuedcertificates
    shortNames:
    - ic
    singular: issuedcertificate
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              IssuedCertificates are used to issue SSL certificates
                 to workload Kubernetes clusters from a central (out-of-cluster) Certificate Authority.

                 When an IssuedCertificate is created, a certificate is issued to a workload cluster by
                 a central Certificate Authority via the following workflow:

                 1. The Certificate Issuer creates the IssuedCertificate resource on the remote cluster
                 2. The Certificate Signature Requesting agent installed to the remote cluster generates
                   a Certificate Signing Request (CSR) and writes it to the status of the IssuedCertificate
                 3. Finally, the Certificate Issuer generates a signed certificate for the CSR and writes
                   it back as Kubernetes Secret in the remote cluster.

                 Trust can therefore be established across the Gloo Mesh server cluster and agents on workload clusters
                 without requiring private keys to ever leave workload clusters.

                 The certificate requested here is for Gloo Mesh agents on workload clusters to securely establish communication
                 with Gloo Mesh server. This is not related to certificates for services running in the mesh.
            oneOf:
            - not:
                anyOf:
                - properties:
                    mgmtServerCa:
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - signingCertificateSecret
                      - required:
                        - signingCertificateSecret
                  required:
                  - mgmtServerCa
                - properties:
                    agentCa:
                      oneOf:
                      - not:
                          anyOf:
                          - properties:
                              vault:
                                allOf:
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - caBundle
                                      - required:
                                        - caSecretRef
                                      - required:
                                        - caLocalPath
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                                - oneOf:
                                  - not:
                                      anyOf:
                                      - required:
                                        - tokenSecretRef
                                      - properties:
                                          kubernetesAuth:
                                            oneOf:
                                            - not:
                                                anyOf:
                                                - required:
                                                  - serviceAccountRef
                                                - required:
                                                  - mountedSaPath
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        required:
                                        - kubernetesAuth
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                            required:
                            - vault
                      - properties:
                          vault:
                            allOf:
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                        required:
                        - vault
                  required:
                  - agentCa
            - properties:
                mgmtServerCa:
                  oneOf:
                  - not:
                      anyOf:
                      - required:
                        - signingCertificateSecret
                  - required:
                    - signingCertificateSecret
              required:
              - mgmtServerCa
            - properties:
                agentCa:
                  oneOf:
                  - not:
                      anyOf:
                      - properties:
                          vault:
                            allOf:
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - caBundle
                                  - required:
                                    - caSecretRef
                                  - required:
                                    - caLocalPath
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                            - oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - tokenSecretRef
                                  - properties:
                                      kubernetesAuth:
                                        oneOf:
                                        - not:
                                            anyOf:
                                            - required:
                                              - serviceAccountRef
                                            - required:
                                              - mountedSaPath
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    required:
                                    - kubernetesAuth
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                        required:
                        - vault
                  - properties:
                      vault:
                        allOf:
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - caBundle
                              - required:
                                - caSecretRef
                              - required:
                                - caLocalPath
                          - required:
                            - caBundle
                          - required:
                            - caSecretRef
                          - required:
                            - caLocalPath
                        - oneOf:
                          - not:
                              anyOf:
                              - required:
                                - tokenSecretRef
                              - properties:
                                  kubernetesAuth:
                                    oneOf:
                                    - not:
                                        anyOf:
                                        - required:
                                          - serviceAccountRef
                                        - required:
                                          - mountedSaPath
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                required:
                                - kubernetesAuth
                          - required:
                            - tokenSecretRef
                          - properties:
                              kubernetesAuth:
                                oneOf:
                                - not:
                                    anyOf:
                                    - required:
                                      - serviceAccountRef
                                    - required:
                                      - mountedSaPath
                                - required:
                                  - serviceAccountRef
                                - required:
                                  - mountedSaPath
                            required:
                            - kubernetesAuth
                    required:
                    - vault
              required:
              - agentCa
            properties:
              agentCa:
                description: Agent CA options
                properties:
                  vault:
                    description: Use vault as the intermediate CA source
                    properties:
                      caBundle:
                        description: Inline CA bytes
                        format: binary
                        type: string
                      caLocalPath:
                        description: Path to a local file containing the CA bytes
                        type: string
                      caPath:
                        description: |-
                          `ca_path` is the mount path of the Vault PKI backend's `sign` endpoint, e.g:
                          "my_pki_mount/sign/my-role-name".
                        type: string
                      caSecretRef:
                        description: |-
                          Reference to a secret containing the CA bytes.
                          The CA should be stored by the key `root-cert.pem`
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                      csrPath:
                        description: |-
                          `csr_path` is the mount path of the Vault PKI backend's `generate` endpoint, e.g:
                          "my_pki_mount/intermediate/generate/exported".
                          "exported" is necessary here as istio needs access to the private key
                          See vault docs here: https://www.vaultproject.io/api-docs/secret/pki#parameters-4
                        type: string
                      kubernetesAuth:
                        description: |-
                          Kubernetes authenticates with Vault by passing the ServiceAccount
                          token stored in the named Secret resource to the Vault server.
                        properties:
                          mountPath:
                            description: |-
                              The Vault mountPath here is the mount path to use when authenticating with
                              Vault. For example, setting a value to `/v1/auth/foo`, will use the path
                              `/v1/auth/foo/login` to authenticate with Vault. If unspecified, the
                              default value "/v1/auth/kubernetes" will be used.
                            type: string
                          mountedSaPath:
                            description: |-
                              File System path to grab the service account token from.
                              Defaults to /var/run/secrets/kubernetes.io/serviceaccount
                            type: string
                          role:
                            description: |-
                              A required field containing the Vault Role to assume. A Role binds a
                              Kubernetes ServiceAccount with a set of Vault policies.
                            type: string
                          secretTokenKey:
                            description: |-
                              Key to search for the sa_token
                              Default to "token"
                            type: string
                          serviceAccountRef:
                            description: Reference to service account, other than
                              the one mounted to the current pod.
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                        type: object
                      namespace:
                        description: |-
                          Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1"
                          More about namespaces can be found [here](https://www.vaultproject.io/docs/enterprise/namespaces)
                        type: string
                      server:
                        description: 'Server is the connection address for the Vault
                          server, e.g: "https://vault.example.com:8200".'
                        type: string
                      tokenSecretRef:
                        description: TokenSecretRef authenticates with Vault by presenting
                          a token.
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                type: object
              autoRestartPods:
                description: |-
                  Signals whether or not the workload pods should be restarted
                  to pick up the new cert.
                type: boolean
              certOptions:
                description: Set of options to configure the intermediate certificate
                  being generated
                properties:
                  orgName:
                    description: Root cert organization name. Defaults to "gloo-mesh".
                    type: string
                  rsaKeySizeBytes:
                    description: Size in bytes of the root cert's private key. Defaults
                      to 4096.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  secretRotationGracePeriodRatio:
                    description: |-
                      The ratio of cert lifetime to refresh a cert. For example, at 0.10 and 1 hour TTL,
                      we would refresh 6 minutes before expiration
                    format: float
                    type: number
                  ttlDays:
                    description: Number of days before root cert expires. Defaults
                      to 365.
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                type: object
              hosts:
                description: |-
                  A list of hostnames and IPs to generate a certificate for.
                          This can also be set to the identity running the workload,
                          e.g. a Kubernetes service account.

                          Generally for an Istio CA this will take the form `spiffe://cluster.local/ns/istio-system/sa/citadel`.

                          "cluster.local" may be replaced by the root of trust domain for the mesh.
                items:
                  type: string
                type: array
              issuedCertificateSecret:
                description: |-
                  The secret containing the SSL certificate to be generated for this IssuedCertificate (located in the Gloo Mesh agent's cluster).
                  If nil, the sidecar agent stores the signing certificate in memory. (Enterprise only)
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              meshRef:
                description: Reference to the mesh on which this cert is being issued
                  for.
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              mgmtServerCa:
                description: Gloo Mesh CA options
                properties:
                  signingCertificateSecret:
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
            type: object
          status:
            description: The IssuedCertificate status is written by the CertificateRequesting
              agent.
            properties:
              error:
                description: |-
                  Any error observed which prevented the CertificateRequest from being processed.
                  If the error is empty, the request has been processed successfully.
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the IssuedCertificate metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this IssuedCertificate.
                format: int64
                type: integer
              state:
                description: The current state of the IssuedCertificate workflow,
                  reported by the agent.
                enum:
                - PENDING
                - REQUESTED
                - ISSUED
                - FINISHED
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 6ed1f78c05e8509c
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: certificaterequests.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: CertificateRequest
    listKind: CertificateRequestList
    plural: certificaterequests
    shortNames:
    - cr
    singular: certificaterequest
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              CertificateRequests are generated by the Gloo Mesh agent installed on workload clusters.
                 They are used to request a signed certificate from the certificate issuer (the Gloo Mesh server) based on a private key
                 generated by the agent (which never leaves the workload cluster).

                 When Gloo Mesh server creates an IssuedCertificate on a workload cluster, the local Gloo Mesh agent
                 will generate a CertificateRequest corresponding to it.

                 Gloo Mesh will then process the certificate signing request contained in the
                 `CertificateRequestSpec` and write the signed SSL certificate back as a Kubernetes secret in the workload cluster,
                 and update the `CertificateRequestStatus` to point to that secret.

                 The certificate requested here is for Gloo Mesh agents on workload clusters to securely establish communication
                 with Gloo Mesh server. This is not related to certificates for services running in the mesh.
            properties:
              certificateSigningRequest:
                description: |-
                  Base64-encoded data for the PKCS#10 Certificate Signing Request issued
                  by the Gloo Mesh agent deployed in the workload cluster, corresponding
                  to the IssuedRequest received by the Gloo Mesh agent.
                format: binary
                type: string
            type: object
          status:
            properties:
              certChain:
                description: The cert chain of signing CA.
                format: binary
                type: string
              error:
                description: |-
                  Any error observed which prevented the CertificateRequest from being processed.
                  If the error is empty, the request has been processed successfully
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the CertificateRequest metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the issuer has not processed the most
                  recent version of this request.
                format: int64
                type: integer
              signedCertificate:
                description: The signed intermediate certificate issued by the CA.
                format: binary
                type: string
              signingRootCa:
                description: The root CA used by the issuer to sign the certificate.
                format: binary
                type: string
              state:
                description: The current state of the CertificateRequest workflow
                  reported by the issuer.
                enum:
                - PENDING
                - FINISHED
                - FAILED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 2957c9243711d6b9
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: podbouncedirectives.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: PodBounceDirective
    listKind: PodBounceDirectiveList
    plural: podbouncedirectives
    shortNames:
    - pbd
    singular: podbouncedirective
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              When certificates are issued, Istio-controlled pods need to be bounced (restarted) to ensure they pick up the
                 new certificates due to [this issue](https://github.com/istio/istio/issues/22993).
                 The certificate issuer will create a PodBounceDirective containing the namespaces and labels
                 of the pods that need to be bounced in order to pick up the new certs.
            properties:
              meshRef:
                description: Reference to the mesh on which this cert is being issued
                  for
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              podsToBounce:
                description: |-
                  A list of Kubernetes pods to bounce (delete and cause a restart)
                  when the certificate is issued.
                  This will include the control plane pods as well as any Pods
                  which share a data plane with the target mesh.
                items:
                  properties:
                    labels:
                      additionalProperties:
                        type: string
                      description: Any labels shared by the Pods.
                      type: object
                    namespace:
                      description: The namespace in which the pods live.
                      type: string
                    rootCertSync:
                      description: |-
                        Wait for the control plane to have synced all root cert configmaps in data plane namespaces before
                        bouncing these Pods.
                      properties:
                        configMapKey:
                          type: string
                        configMapRef:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        secretKey:
                          type: string
                        secretRef:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                    waitForReplicas:
                      description: |-
                        Wait for this number of replacement pods to reach be fully ready before
                        deleting the next set of selected Pods.
                        This is used to ensure the control plane pods are allowed to restart
                        before sidecars and gateways are restarted.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                type: array
            type: object
          status:
            description: PodBounceDirectiveStatus reports the status for stateful
              Pod bounces (when bouncing pods requires waiting for readiness).
            properties:
              error:
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the PodBounceDirective metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this IssuedCertificate.
                format: int64
                type: integer
              podsBounced:
                description: |-
                  A list of Kubernetes pods to bounce (delete and cause a restart)
                  when the certificate is issued.
                  This will include the control plane pods as well as any Pods
                  which share a data plane with the target mesh.
                items:
                  properties:
                    bouncedPods:
                      description: The names of the pods that were bounced for the
                        corresponding selector specified in `PodBounceDirectiveSpec.PodSelector.labels`.
                      items:
                        type: string
                      type: array
                  type: object
                type: array
              state:
                description: The current state of the IssuedCertificate workflow,
                  reported by the agent.
                enum:
                - PENDING
                - BOUNCING_PODS
                - FAILED
                - FINISHED
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 42da09bcbb424701
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: xdsconfigs.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: XdsConfig
    listKind: XdsConfigList
    plural: xdsconfigs
    shortNames:
    - xc
    singular: xdsconfig
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              XdsConfigs are used to issue xDS Configuration Resources to running Envoy instances.
                 They are created by Gloo Mesh for processing by an agent running on managed clusters.

                 The agent will serve the specified xDS configuration resources on its grpc-xds port (default 9977)
                 to the Envoy instances (nodes) defined in the XDSConfigSpec.

                 This feature is currently only available in Gloo Mesh Enterprise.
            properties:
              types:
                description: |-
                  The xDS resources to serve to the nodes.
                  Mapped by type URL.
                items:
                  properties:
                    resources:
                      description: Stored as compressed, base-64 encoded raw bytes.
                      items:
                        properties:
                          compressedData:
                            description: Stored as compressed, base-64 encoded raw
                              bytes.
                            format: binary
                            type: string
                          name:
                            description: Name of the resource as referenced by xDS.
                            type: string
                        type: object
                      type: array
                    typeUrl:
                      description: The type URL of the resources in the given set.
                      type: string
                  type: object
                type: array
              workloads:
                description: The Workloads that will receive this xDS Configuration.
                items:
                  properties:
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: The XdsConfig status is written by the CertificateRequesting
              agent.
            properties:
              error:
                description: |-
                  Any error observed which prevented the XdsConfig from being processed.
                  If the error is empty, the request has been processed successfully.
                type: string
              observedGeneration:
                description: |-
                  The most recent generation observed in the the XdsConfig metadata.
                  If the `observedGeneration` does not match `metadata.generation`, the Gloo Mesh agent has not processed the most
                  recent version of this XdsConfig.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 7917bc9c72f2881b
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: discoveredgateways.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: DiscoveredGateway
    listKind: DiscoveredGatewayList
    plural: discoveredgateways
    shortNames:
    - dg
    singular: discoveredgateway
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A DiscoveredGateway is an internal representation of an Istio Gateway workload.
                 DiscoveredGateways are automatically detected from Istio Gateway deployments and services.
            properties:
              externalAddresses:
                description: The externally-reachable addresses on which the gateway
                  is listening for connections.
                items:
                  properties:
                    address:
                      description: |-
                        The externally-reachable address on which the gateway is listening for connections.
                        Depending on the gateway service type and its properties, this can be a LoadBalancer address
                        reported by Kubernetes, an externally-reachable Node address, and a user-defined external IP set on the service.
                      type: string
                    locality:
                      description: The locality in which the node serving this address
                        resides, typically representing a large geographic area.
                      properties:
                        region:
                          description: |-
                            Represents a large geographic area, such as us-east1. A region typically contains a number of availability zones.
                            A workload's region is determined by the value of the "topology.kubernetes.io/region" label (or the deprecated
                            "failure-domain.beta.kubernetes.io/region" one) of the Node
                            that is running it.
                          type: string
                        subZone:
                          description: |-
                            A zone can be divided into sub-zones to have even more fine-grained control over load balancing behavior.
                            The sub-zone concept doesn't exist in Kubernetes. This value is derived by the Istio-specific
                            "topology.istio.io/subzone" Node label.
                          type: string
                        zone:
                          description: |-
                            Represents an availability zone within a region, e.g. us-east-1a.
                            A workload's zone is determined by the value of the "topology.kubernetes.io/zone" label (or the deprecated
                            "failure-domain.beta.kubernetes.io/zone" one) of the Node that is running it.
                          type: string
                      type: object
                    ports:
                      description: The externally-reachable ports on which the gateway
                        is listening for connections.
                      items:
                        properties:
                          name:
                            description: |-
                              A label for the port, eg "http".
                              This will match the port name from the underlying gateway k8s Service.
                            type: string
                          number:
                            description: The port number exposed on the underlying
                              gateway k8s Service.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          protocol:
                            description: |-
                              The protocol used in communication with this destination
                              MUST be one of the following: HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              service:
                description: Reference to the Kubernetes service that exposes the
                  gateway workloads.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              serviceAccountRefs:
                description: References to any service accounts selected by the service
                  that exposes the gateway workloads.
                items:
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                type: array
              serviceType:
                description: gateway resource type
                enum:
                - CLUSTER_IP
                - NODE_PORT
                - LOAD_BALANCER
                - EXTERNAL_NAME
                type: string
              workloadLabels:
                additionalProperties:
                  type: string
                description: The labels used by the Kubernetes service to select the
                  gateway workloads.
                type: object
            type: object
          status:
            properties:
              generic:
                properties:
                  message:
                    description: Additional information about the current state of
                      the resource.
                    type: string
                  observedGeneration:
                    description: |-
                      The most recent generation observed in the the object's metadata.
                      If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh
                      has not processed the most recent version of this object.
                    format: int64
                    type: integer
                  state:
                    description: |-
                      Whether the resource has been accepted as valid and processed in the Gloo
                      Mesh config translation.
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - WARNING
                    - FAILED
                    - UNLICENSED
                    type: string
                  updatedAt:
                    description: The last time the status was updated.
                    format: date-time
                    type: string
                type: object
              virtualGateways:
                description: VirtualGateways selecting this discovered gateway
                items:
                  properties:
                    cluster:
                      description: the cluster of the object. if the field is omitted,
                        Gloo Mesh will use the same cluster as the parent object containing
                        this reference.
                      type: string
                    name:
                      description: the name of the object
                      type: string
                    namespace:
                      description: the namespace of the object. if the field is omitted,
                        Gloo Mesh will use the same namespace as the parent object
                        containing this reference.
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: c9e6b11e60882ae
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: meshes.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: A Mesh is an internal representation of a service mesh control
              plane deployment.
            properties:
              agentInfo:
                description: Describes the Gloo Mesh agent if it has been installed
                  to the managed cluster.
                properties:
                  namespace:
                    description: The namespace in which the Gloo Mesh agent is installed.
                    type: string
                  version:
                    description: The version of the Gloo Mesh agent.
                    type: string
                type: object
              discoveryNamespaces:
                description: |-
                  The list of namespaces that are part of the mesh, which is computed based
                  on the [discovery selectors](https://istio.io/latest/blog/2021/discovery-selectors/)
                  defined in the Istio Mesh Config.
                  And empty value implies that the Istio control place processes resources from all namespaces.
                items:
                  type: string
                type: array
              installation:
                description: Describes the Istio control plane deployment.
                properties:
                  cluster:
                    description: The Gloo Mesh cluster in which the control plane
                      has been installed.
                    type: string
                  namespace:
                    description: Namespace in which the control plane has been installed.
                    type: string
                  podLabels:
                    additionalProperties:
                      type: string
                    description: The labels on the control plane pods (read from the
                      deployment).
                    type: object
                  revision:
                    description: The revision of the Istio control plane that has
                      been installed.
                    type: string
                  version:
                    description: |-
                      The version of the Mesh that has been installed, which is determined using the image tag on the
                      mesh's primary control plane image (e.g. the istio-pilot image tag).
                    type: string
                type: object
              istiodServiceAccount:
                description: The istiod service account which determines identity
                  for the Istio CA cert.
                type: string
              rootNamespace:
                description: |-
                  Root Namespace as specified in the Istio Mesh Config.
                  This namespace will be treated as the home for all root Istio config.
                type: string
              smartDnsProxyingEnabled:
                description: True if smart DNS proxying is enabled, which allows for
                  arbitrary DNS domains.
                type: boolean
              trustDomain:
                description: |-
                  The Istio trust domain used for https/[spiffe](https://spiffe.io/spiffe/concepts/#trust-domain) [identity](https://istio.io/docs/reference/glossary/#identity).
                  If empty will default to ["cluster.local"](https://github.com/istio/istio/blob/e768f408a7de224e64ccdfb2634442541ce08e6a/pilot/cmd/pilot-agent/main.go#L118).
                type: string
            type: object
          status:
            properties:
              observedGeneration:
                description: |-
                  The observed generation of the Mesh.
                  When this matches the Mesh's metadata.generation, it indicates that Gloo Mesh
                  has processed the latest version of the Mesh.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    crd.solo.io/specHash: 50667678335eae15
    crd.solo.io/version: 2.1.0
  labels:
    app: gloo-mesh-apis
    app.kubernetes.io/name: gloo-mesh-apis
  name: discoveredcnis.internal.gloo.solo.io
spec:
  group: internal.gloo.solo.io
  names:
    categories:
    - solo-io
    kind: DiscoveredCNI
    listKind: DiscoveredCNIList
    plural: discoveredcnis
    shortNames:
    - dcni
    singular: discoveredcni
  scope: Namespaced
  versions:
  - name: v2
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              A DiscoveredCNISpec is an internal representation of a CNI discovered to be running in a cluster.
                 DiscoveredCNIs are automatically detected from the node agent (DaemonSet) which runs on each CNI-networked cluster.
            properties:
              agent:
                description: Reference to the Kubernetes DaemonSet that runs throughout
                  the cluster.
                properties:
                  clusterName:
                    description: name of the cluster in which the resource exists
                    type: string
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              metricsPortNumber:
                description: the port number used to service CNI metrics.
                maximum: 4294967295
                minimum: 0
                type: integer
              provider:
                description: The provider of CNI installed.
                enum:
                - CILIUM
                - CALICO
                type: string
              version:
                description: the version of the CNI installed.
                type: string
            type: object
          status:
            properties:
              observedGeneration:
                description: |-
                  The observed generation of the DiscoveredGateway.
                  When this matches the DiscoveredGateway metadata.generation, it indicates that Gloo Mesh
                  has processed the latest version of the DiscoveredGateway.
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
